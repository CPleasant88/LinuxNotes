Simple commands:
  # crontab -e = edit crontab file
  # crontab -l = list cron jobs
  # crontab -r = remove files

This wil open a the default editor (could be vi or pico, if you want you can change the default editor) to let us manipulate the crontab. If you save and exit the editor, all your cronjobs are saved into crontab. Cronjobs are written in the following format:

  * * * * * /bin/execute/this/script.sh

Scheduling explained:
  As you can see there are 5 stars. The stars represent different date parts in the following order:
    1  minute (from 0 to 59)
    2  hour (from 0 to 23)
    3  day of month (from 1 to 31)
    4  month (from 1 to 12)
    5  day of week (from 0 to 6) (0=Sunday)

  * = always. It is a wildcard for every part of the cron schedule expression.

  So * * * * * means every minute of every hour of every day of every month and every day of the week.

     * * * * *  command to execute
     ┬ ┬ ┬ ┬ ┬
     │ │ │ │ │
     │ │ │ │ │
     │ │ │ │ └───── day of week (0 - 7) (0 to 6 are Sunday to Saturday, or use names; 7 is Sunday, the same as 0)
     │ │ │ └────────── month (1 - 12)
     │ │ └─────────────── day of month (1 - 31)
     │ └──────────────────── hour (0 - 23)
     └───────────────────────── min (0 - 59)

      An other example:

    0 * * * * -this means the cron will run always when the minutes are 0 (so hourly)
    0 1 * * * - this means the cron will run always at 1 o'clock.
    * 1 * * * - this means the cron will run each minute when the hour is 1. So 1:00, 1:01, ...1:59.

Terms commands:
@reboot     Run once, at startup
@yearly     Run once  a year     "0 0 1 1 *"
@annually   (same as  @yearly)
@monthly    Run once  a month    "0 0 1 * *"
@weekly     Run once  a week     "0 0 * * 0"
@daily      Run once  a day      "0 0 * * *"
@midnight   (same as  @daily)
@hourly     Run once  an hour    "0 * * * *"
